#!/usr/bin/ruby

# -------------------------------------------------------------------------- #
# Copyright 2002-2018, OpenNebula Project, OpenNebula Systems                #
#                                                                            #
# Licensed under the Apache License, Version 2.0 (the "License"); you may    #
# not use this file except in compliance with the License. You may obtain    #
# a copy of the License at                                                   #
#                                                                            #
# http://www.apache.org/licenses/LICENSE-2.0                                 #
#                                                                            #
# Unless required by applicable law or agreed to in writing, software        #
# distributed under the License is distributed on an "AS IS" BASIS,          #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   #
# See the License for the specific language governing permissions and        #
# limitations under the License.                                             #
#--------------------------------------------------------------------------- #

t0 = Time.now
require_relative 'lib/lxd_driver'

LXDriver.log_init

dfile = ARGV[0]
vm_id = ARGV[2]

# Map one xml into LXD config
xml = OpenNebula::XMLElement.new
xml.initialize_xml(STDIN.read, 'VM')
info = LXDriver::Info.new(xml)

# Create container
client = LXDClient.new
container = Container.new(info, client)
container.create

# Setup required mounts
system('sudo mount /home/dann1/one-0.img /var/lib/lxd/containers/one-0/')

# Start container
# TODO: validate existing container
begin
    raise LXDError, container.status if container.start != 'Running'
rescue LXDError => e
    system('sudo umount /home/dann1/one-0.img')
    OpenNebula.log_error('Container failed to start')
    container.delete
    raise e
end

# VNC

LXDriver.log_end(t0)
